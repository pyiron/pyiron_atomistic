# This workflow is used to run the unittest of pyiron

name: Unittests

on:
  push:
    branches: [ main ]
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
          - operating-system: macos-latest
            python-version: '3.12'
            label: osx-64-py-3-12

          - operating-system: windows-latest
            python-version: '3.12'
            label: win-64-py-3-12

          - operating-system: ubuntu-latest
            python-version: '3.12'
            label: linux-64-py-3-12

          - operating-system: ubuntu-latest
            python-version: '3.11'
            label: linux-64-py-3-11
            
          - operating-system: ubuntu-latest
            python-version: '3.10'
            label: linux-64-py-3-10

    steps:
      - uses: actions/checkout@v2
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          miniforge-variant: Mambaforge
          channels: conda-forge
          channel-priority: strict
          activate-environment: my-env
          environment-file: .ci_support/environment.yml
          use-mamba: true
      - name: Test
        shell: bash -l {0}
        timeout-minutes: 30
        run: |
          python .ci_support/pyironconfig.py
          pip install versioneer[toml]==0.29
          pip install . --no-deps --no-build-isolation
          coverage run --omit="pyiron_atomistics/_version.py,tests/*" -m unittest discover tests
          coverage xml
      - name: Coveralls
        if: matrix.label == 'linux-64-py-3-12'
        uses: coverallsapp/github-action@v2
